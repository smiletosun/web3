/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { MyNFT, MyNFTInterface } from "../../../contracts/MyNFT.sol/MyNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600481526020017f52616945000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f524149450000000000000000000000000000000000000000000000000000000081525081600090816200008f91906200033e565b508060019081620000a191906200033e565b50505060066000815480929190620000b99062000454565b9190505550620004a1565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014657607f821691505b6020821081036200015c576200015b620000fe565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000187565b620001d2868362000187565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021f620002196200021384620001ea565b620001f4565b620001ea565b9050919050565b6000819050919050565b6200023b83620001fe565b620002536200024a8262000226565b84845462000194565b825550505050565b600090565b6200026a6200025b565b6200027781848462000230565b505050565b5b818110156200029f576200029360008262000260565b6001810190506200027d565b5050565b601f821115620002ee57620002b88162000162565b620002c38462000177565b81016020851015620002d3578190505b620002eb620002e28562000177565b8301826200027c565b50505b505050565b600082821c905092915050565b60006200031360001984600802620002f3565b1980831691505092915050565b60006200032e838362000300565b9150826002028217905092915050565b6200034982620000c4565b67ffffffffffffffff811115620003655762000364620000cf565b5b6200037182546200012d565b6200037e828285620002a3565b600060209050601f831160018114620003b65760008415620003a1578287015190505b620003ad858262000320565b8655506200041d565b601f198416620003c68662000162565b60005b82811015620003f057848901518255600182019150602085019450602081019050620003c9565b868310156200041057848901516200040c601f89168262000300565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200046182620001ea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000496576200049562000425565b5b600182019050919050565b611e9080620004b16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d5780631249c58b1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611663565b6102f5565b60405161011691906116ab565b60405180910390f35b6101276103d7565b6040516101349190611756565b60405180910390f35b610157600480360381019061015291906117ae565b610469565b604051610164919061181c565b60405180910390f35b61018760048036038101906101829190611863565b610485565b005b61019161049b565b60405161019e91906118b2565b60405180910390f35b6101c160048036038101906101bc91906118cd565b6104cc565b005b6101dd60048036038101906101d891906118cd565b6105ce565b005b6101f960048036038101906101f491906117ae565b6105ee565b604051610206919061181c565b60405180910390f35b61022960048036038101906102249190611920565b610600565b60405161023691906118b2565b60405180910390f35b6102476106ba565b6040516102549190611756565b60405180910390f35b61027760048036038101906102729190611979565b61074c565b005b610293600480360381019061028e9190611aee565b610762565b005b6102af60048036038101906102aa91906117ae565b61077f565b6040516102bc9190611756565b60405180910390f35b6102df60048036038101906102da9190611b71565b6107e8565b6040516102ec91906116ab565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d057506103cf8261087c565b5b9050919050565b6060600080546103e690611be0565b80601f016020809104026020016040519081016040528092919081815260200182805461041290611be0565b801561045f5780601f106104345761010080835404028352916020019161045f565b820191906000526020600020905b81548152906001019060200180831161044257829003601f168201915b5050505050905090565b6000610474826108e6565b5061047e8261096e565b9050919050565b61049782826104926109ab565b6109b3565b5050565b60008060065490506104ad33826109c5565b600660008154809291906104c090611c40565b91905055508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361053e5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610535919061181c565b60405180910390fd5b6000610552838361054d6109ab565b6109e3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105c8578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105bf93929190611c88565b60405180910390fd5b50505050565b6105e983838360405180602001604052806000815250610762565b505050565b60006105f9826108e6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106735760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161066a919061181c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106c990611be0565b80601f01602080910402602001604051908101604052809291908181526020018280546106f590611be0565b80156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b5050505050905090565b61075e6107576109ab565b8383610bfd565b5050565b61076d8484846104cc565b61077984848484610d6c565b50505050565b606061078a826108e6565b506000610795610f23565b905060008151116107b557604051806020016040528060008152506107e0565b806107bf84610f3a565b6040516020016107d0929190611cfb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806108f283611008565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361096557826040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161095c91906118b2565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6109c08383836001611045565b505050565b6109df82826040518060200160405280600081525061120a565b5050565b6000806109ef84611008565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a3157610a30818486611226565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ac257610a73600085600080611045565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b45576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c6e57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610c65919061181c565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d5f91906116ab565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115610f1d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610db06109ab565b8685856040518563ffffffff1660e01b8152600401610dd29493929190611d74565b6020604051808303816000875af1925050508015610e0e57506040513d601f19601f82011682018060405250810190610e0b9190611dd5565b60015b610e92573d8060008114610e3e576040519150601f19603f3d011682016040523d82523d6000602084013e610e43565b606091505b506000815103610e8a57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610e81919061181c565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610f1b57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f12919061181c565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001610f49846112ea565b01905060008167ffffffffffffffff811115610f6857610f676119c3565b5b6040519080825280601f01601f191660200182016040528015610f9a5781602001600182028036833780820191505090505b509050600082602001820190505b600115610ffd578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ff157610ff0611e02565b5b04945060008503610fa8575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061107e5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156111b257600061108e846108e6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110f957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561110c575061110a81846107e8565b155b1561114e57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611145919061181c565b60405180910390fd5b81156111b057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611214838361143d565b6112216000848484610d6c565b505050565b611231838383611536565b6112e557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a657806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161129d91906118b2565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016112dc929190611e31565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611348577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161133e5761133d611e02565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611385576d04ee2d6d415b85acef8100000000838161137b5761137a611e02565b5b0492506020810190505b662386f26fc1000083106113b457662386f26fc1000083816113aa576113a9611e02565b5b0492506010810190505b6305f5e10083106113dd576305f5e10083816113d3576113d2611e02565b5b0492506008810190505b61271083106114025761271083816113f8576113f7611e02565b5b0492506004810190505b60648310611425576064838161141b5761141a611e02565b5b0492506002810190505b600a8310611434576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114af5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114a6919061181c565b60405180910390fd5b60006114bd838360006109e3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146115315760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611528919061181c565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115ee57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115af57506115ae84846107e8565b5b806115ed57508273ffffffffffffffffffffffffffffffffffffffff166115d58361096e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6116408161160b565b811461164b57600080fd5b50565b60008135905061165d81611637565b92915050565b60006020828403121561167957611678611601565b5b60006116878482850161164e565b91505092915050565b60008115159050919050565b6116a581611690565b82525050565b60006020820190506116c0600083018461169c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117005780820151818401526020810190506116e5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611728826116c6565b61173281856116d1565b93506117428185602086016116e2565b61174b8161170c565b840191505092915050565b60006020820190508181036000830152611770818461171d565b905092915050565b6000819050919050565b61178b81611778565b811461179657600080fd5b50565b6000813590506117a881611782565b92915050565b6000602082840312156117c4576117c3611601565b5b60006117d284828501611799565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611806826117db565b9050919050565b611816816117fb565b82525050565b6000602082019050611831600083018461180d565b92915050565b611840816117fb565b811461184b57600080fd5b50565b60008135905061185d81611837565b92915050565b6000806040838503121561187a57611879611601565b5b60006118888582860161184e565b925050602061189985828601611799565b9150509250929050565b6118ac81611778565b82525050565b60006020820190506118c760008301846118a3565b92915050565b6000806000606084860312156118e6576118e5611601565b5b60006118f48682870161184e565b93505060206119058682870161184e565b925050604061191686828701611799565b9150509250925092565b60006020828403121561193657611935611601565b5b60006119448482850161184e565b91505092915050565b61195681611690565b811461196157600080fd5b50565b6000813590506119738161194d565b92915050565b600080604083850312156119905761198f611601565b5b600061199e8582860161184e565b92505060206119af85828601611964565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119fb8261170c565b810181811067ffffffffffffffff82111715611a1a57611a196119c3565b5b80604052505050565b6000611a2d6115f7565b9050611a3982826119f2565b919050565b600067ffffffffffffffff821115611a5957611a586119c3565b5b611a628261170c565b9050602081019050919050565b82818337600083830152505050565b6000611a91611a8c84611a3e565b611a23565b905082815260208101848484011115611aad57611aac6119be565b5b611ab8848285611a6f565b509392505050565b600082601f830112611ad557611ad46119b9565b5b8135611ae5848260208601611a7e565b91505092915050565b60008060008060808587031215611b0857611b07611601565b5b6000611b168782880161184e565b9450506020611b278782880161184e565b9350506040611b3887828801611799565b925050606085013567ffffffffffffffff811115611b5957611b58611606565b5b611b6587828801611ac0565b91505092959194509250565b60008060408385031215611b8857611b87611601565b5b6000611b968582860161184e565b9250506020611ba78582860161184e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bf857607f821691505b602082108103611c0b57611c0a611bb1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c4b82611778565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c7d57611c7c611c11565b5b600182019050919050565b6000606082019050611c9d600083018661180d565b611caa60208301856118a3565b611cb7604083018461180d565b949350505050565b600081905092915050565b6000611cd5826116c6565b611cdf8185611cbf565b9350611cef8185602086016116e2565b80840191505092915050565b6000611d078285611cca565b9150611d138284611cca565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000611d4682611d1f565b611d508185611d2a565b9350611d608185602086016116e2565b611d698161170c565b840191505092915050565b6000608082019050611d89600083018761180d565b611d96602083018661180d565b611da360408301856118a3565b8181036060830152611db58184611d3b565b905095945050505050565b600081519050611dcf81611637565b92915050565b600060208284031215611deb57611dea611601565b5b6000611df984828501611dc0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050611e46600083018561180d565b611e5360208301846118a3565b939250505056fea2646970667358221220cbafce1875afee8097c6ebd8a3b3babf988feb8b76a46ddbc161c9cb8ea3049064736f6c63430008180033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyNFT> {
    return super.deploy(overrides || {}) as Promise<MyNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyNFT {
    return super.attach(address) as MyNFT;
  }
  override connect(signer: Signer): MyNFT__factory {
    return super.connect(signer) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new utils.Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MyNFT {
    return new Contract(address, _abi, signerOrProvider) as MyNFT;
  }
}
