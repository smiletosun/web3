/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Ballout,
  BalloutInterface,
} from "../../../contracts/Ballot.sol/Ballout";

const _abi = [
  {
    inputs: [
      {
        internalType: "string[]",
        name: "proposalNames",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "voted",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "vote",
            type: "uint256",
          },
        ],
        internalType: "struct Ballout.Voter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposal",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winnerName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012713803806200127183398181016040528101906200003791906200040e565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060005b8151811015620001775760405180604001604052808383815181106200010d576200010c6200045f565b5b602002602001015181526020016000815250600282815481106200013657620001356200045f565b5b906000526020600020906002020160008201518160000190816200015b9190620006d9565b50602082015181600101559050508080600101915050620000e2565b5050620007c0565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001e38262000198565b810181811067ffffffffffffffff82111715620002055762000204620001a9565b5b80604052505050565b60006200021a6200017f565b9050620002288282620001d8565b919050565b600067ffffffffffffffff8211156200024b576200024a620001a9565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115620002845762000283620001a9565b5b6200028f8262000198565b9050602081019050919050565b60005b83811015620002bc5780820151818401526020810190506200029f565b60008484015250505050565b6000620002df620002d98462000266565b6200020e565b905082815260208101848484011115620002fe57620002fd62000261565b5b6200030b8482856200029c565b509392505050565b600082601f8301126200032b576200032a62000193565b5b81516200033d848260208601620002c8565b91505092915050565b60006200035d62000357846200022d565b6200020e565b905080838252602082019050602084028301858111156200038357620003826200025c565b5b835b81811015620003d157805167ffffffffffffffff811115620003ac57620003ab62000193565b5b808601620003bb898262000313565b8552602085019450505060208101905062000385565b5050509392505050565b600082601f830112620003f357620003f262000193565b5b81516200040584826020860162000346565b91505092915050565b60006020828403121562000427576200042662000189565b5b600082015167ffffffffffffffff8111156200044857620004476200018e565b5b6200045684828501620003db565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004e157607f821691505b602082108103620004f757620004f662000499565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005617fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000522565b6200056d868362000522565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005ba620005b4620005ae8462000585565b6200058f565b62000585565b9050919050565b6000819050919050565b620005d68362000599565b620005ee620005e582620005c1565b8484546200052f565b825550505050565b600090565b62000605620005f6565b62000612818484620005cb565b505050565b5b818110156200063a576200062e600082620005fb565b60018101905062000618565b5050565b601f82111562000689576200065381620004fd565b6200065e8462000512565b810160208510156200066e578190505b620006866200067d8562000512565b83018262000617565b50505b505050565b600082821c905092915050565b6000620006ae600019846008026200068e565b1980831691505092915050565b6000620006c983836200069b565b9150826002028217905092915050565b620006e4826200048e565b67ffffffffffffffff8111156200070057620006ff620001a9565b5b6200070c8254620004c8565b620007198282856200063e565b600060209050601f8311600181146200075157600084156200073c578287015190505b620007488582620006bb565b865550620007b8565b601f1984166200076186620004fd565b60005b828110156200078b5784890151825560018201915060208501945060208101905062000764565b86831015620007ab5784890151620007a7601f8916826200069b565b8355505b6001600288020188555050505b505050505050565b610aa180620007d06000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063013cf08b14610078578063832880e7146100a95780639e7b8d61146100c7578063e2ba53f0146100e3575b600080fd5b6100766004803603810190610071919061064b565b610101565b005b610092600480360381019061008d919061064b565b610200565b6040516100a0929190610717565b60405180910390f35b6100b16102bc565b6040516100be91906107b3565b60405180910390f35b6100e160048036038101906100dc919061082c565b610342565b005b6100eb6104aa565b6040516100f89190610859565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff1615610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d906108c7565b60405180910390fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600283815481106101d5576101d46108e7565b5b906000526020600020906002020160010160008282546101f59190610945565b925050819055505050565b6002818154811061021057600080fd5b9060005260206000209060020201600091509050806000018054610233906109a8565b80601f016020809104026020016040519081016040528092919081815260200182805461025f906109a8565b80156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b5050505050908060010154905082565b6102c46105ed565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c790610a4b565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1615610460576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610457906108c7565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b606060026104b6610566565b815481106104c7576104c66108e7565b5b906000526020600020906002020160000180546104e3906109a8565b80601f016020809104026020016040519081016040528092919081815260200182805461050f906109a8565b801561055c5780601f106105315761010080835404028352916020019161055c565b820191906000526020600020905b81548152906001019060200180831161053f57829003601f168201915b5050505050905090565b600080600090506000805b6002805490508110156105e4578260028281548110610593576105926108e7565b5b90600052602060002090600202016001015411156105d757600281815481106105bf576105be6108e7565b5b90600052602060002090600202016001015492508091505b8080600101915050610571565b50809250505090565b604051806060016040528060008152602001600015158152602001600081525090565b600080fd5b6000819050919050565b61062881610615565b811461063357600080fd5b50565b6000813590506106458161061f565b92915050565b60006020828403121561066157610660610610565b5b600061066f84828501610636565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106b2578082015181840152602081019050610697565b60008484015250505050565b6000601f19601f8301169050919050565b60006106da82610678565b6106e48185610683565b93506106f4818560208601610694565b6106fd816106be565b840191505092915050565b61071181610615565b82525050565b6000604082019050818103600083015261073181856106cf565b90506107406020830184610708565b9392505050565b61075081610615565b82525050565b60008115159050919050565b61076b81610756565b82525050565b6060820160008201516107876000850182610747565b50602082015161079a6020850182610762565b5060408201516107ad6040850182610747565b50505050565b60006060820190506107c86000830184610771565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f9826107ce565b9050919050565b610809816107ee565b811461081457600080fd5b50565b60008135905061082681610800565b92915050565b60006020828403121561084257610841610610565b5b600061085084828501610817565b91505092915050565b6000602082019050818103600083015261087381846106cf565b905092915050565b7fe5b7b2e7bb8fe68a95e7a5a8e4ba860000000000000000000000000000000000600082015250565b60006108b1600f83610683565b91506108bc8261087b565b602082019050919050565b600060208201905081810360008301526108e0816108a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061095082610615565b915061095b83610615565b925082820190508082111561097357610972610916565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806109c057607f821691505b6020821081036109d3576109d2610979565b5b50919050565b7fe58faae69c89e4b8bbe5b8ade6898de69c89e69d83e58886e9858de68a95e7a560008201527fa8e69d83e588a900000000000000000000000000000000000000000000000000602082015250565b6000610a35602783610683565b9150610a40826109d9565b604082019050919050565b60006020820190508181036000830152610a6481610a28565b905091905056fea2646970667358221220be8b5e23ee53cc0e1d38e9282869c54847f27cec7c27330f027389840144969a64736f6c63430008180033";

type BalloutConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalloutConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballout__factory extends ContractFactory {
  constructor(...args: BalloutConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    proposalNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ballout> {
    return super.deploy(proposalNames, overrides || {}) as Promise<Ballout>;
  }
  override getDeployTransaction(
    proposalNames: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(proposalNames, overrides || {});
  }
  override attach(address: string): Ballout {
    return super.attach(address) as Ballout;
  }
  override connect(signer: Signer): Ballout__factory {
    return super.connect(signer) as Ballout__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalloutInterface {
    return new utils.Interface(_abi) as BalloutInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ballout {
    return new Contract(address, _abi, signerOrProvider) as Ballout;
  }
}
