/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HelloWorld,
  HelloWorldInterface,
} from "../../contracts/HelloWorld";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialMessage",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldMessage",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newMessage",
        type: "string",
      },
    ],
    name: "UpdateMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newMessage",
        type: "string",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000edd38038062000edd833981810160405281019062000037919062000224565b8060009081620000489190620004c0565b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620005a7565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000fa82620000af565b810181811067ffffffffffffffff821117156200011c576200011b620000c0565b5b80604052505050565b60006200013162000091565b90506200013f8282620000ef565b919050565b600067ffffffffffffffff821115620001625762000161620000c0565b5b6200016d82620000af565b9050602081019050919050565b60005b838110156200019a5780820151818401526020810190506200017d565b60008484015250505050565b6000620001bd620001b78462000144565b62000125565b905082815260208101848484011115620001dc57620001db620000aa565b5b620001e98482856200017a565b509392505050565b600082601f830112620002095762000208620000a5565b5b81516200021b848260208601620001a6565b91505092915050565b6000602082840312156200023d576200023c6200009b565b5b600082015167ffffffffffffffff8111156200025e576200025d620000a0565b5b6200026c84828501620001f1565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002c857607f821691505b602082108103620002de57620002dd62000280565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003487fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000309565b62000354868362000309565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a16200039b62000395846200036c565b62000376565b6200036c565b9050919050565b6000819050919050565b620003bd8362000380565b620003d5620003cc82620003a8565b84845462000316565b825550505050565b600090565b620003ec620003dd565b620003f9818484620003b2565b505050565b5b81811015620004215762000415600082620003e2565b600181019050620003ff565b5050565b601f82111562000470576200043a81620002e4565b6200044584620002f9565b8101602085101562000455578190505b6200046d6200046485620002f9565b830182620003fe565b50505b505050565b600082821c905092915050565b6000620004956000198460080262000475565b1980831691505092915050565b6000620004b0838362000482565b9150826002028217905092915050565b620004cb8262000275565b67ffffffffffffffff811115620004e757620004e6620000c0565b5b620004f38254620002af565b6200050082828562000425565b600060209050601f83116001811462000538576000841562000523578287015190505b6200052f8582620004a2565b8655506200059f565b601f1984166200054886620002e4565b60005b8281101562000572578489015182556001820191506020850194506020810190506200054b565b868310156200059257848901516200058e601f89168262000482565b8355505b6001600288020188555050505b505050505050565b61092680620005b76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633d7403a31461005c5780636d4ce63c14610078578063893d20e8146100965780638da5cb5b146100b4578063e21f37ce146100d2575b600080fd5b61007660048036038101906100719190610407565b6100f0565b005b61008061013d565b60405161008d91906104cf565b60405180910390f35b61009e6101cf565b6040516100ab9190610532565b60405180910390f35b6100bc6101f9565b6040516100c99190610532565b60405180910390f35b6100da61021f565b6040516100e791906104cf565b60405180910390f35b80600090816100ff9190610763565b507f72509cb1827c1f708c15974ef6a2db102be98f5a40f067c96a4e5ef4078030c56000826040516101329291906108b9565b60405180910390a150565b60606000805461014c9061057c565b80601f01602080910402602001604051908101604052809291908181526020018280546101789061057c565b80156101c55780601f1061019a576101008083540402835291602001916101c5565b820191906000526020600020905b8154815290600101906020018083116101a857829003601f168201915b5050505050905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000805461022c9061057c565b80601f01602080910402602001604051908101604052809291908181526020018280546102589061057c565b80156102a55780601f1061027a576101008083540402835291602001916102a5565b820191906000526020600020905b81548152906001019060200180831161028857829003601f168201915b505050505081565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610314826102cb565b810181811067ffffffffffffffff82111715610333576103326102dc565b5b80604052505050565b60006103466102ad565b9050610352828261030b565b919050565b600067ffffffffffffffff821115610372576103716102dc565b5b61037b826102cb565b9050602081019050919050565b82818337600083830152505050565b60006103aa6103a584610357565b61033c565b9050828152602081018484840111156103c6576103c56102c6565b5b6103d1848285610388565b509392505050565b600082601f8301126103ee576103ed6102c1565b5b81356103fe848260208601610397565b91505092915050565b60006020828403121561041d5761041c6102b7565b5b600082013567ffffffffffffffff81111561043b5761043a6102bc565b5b610447848285016103d9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561048a57808201518184015260208101905061046f565b60008484015250505050565b60006104a182610450565b6104ab818561045b565b93506104bb81856020860161046c565b6104c4816102cb565b840191505092915050565b600060208201905081810360008301526104e98184610496565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061051c826104f1565b9050919050565b61052c81610511565b82525050565b60006020820190506105476000830184610523565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061059457607f821691505b6020821081036105a7576105a661054d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261060f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105d2565b61061986836105d2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061066061065b61065684610631565b61063b565b610631565b9050919050565b6000819050919050565b61067a83610645565b61068e61068682610667565b8484546105df565b825550505050565b600090565b6106a3610696565b6106ae818484610671565b505050565b5b818110156106d2576106c760008261069b565b6001810190506106b4565b5050565b601f821115610717576106e8816105ad565b6106f1846105c2565b81016020851015610700578190505b61071461070c856105c2565b8301826106b3565b50505b505050565b600082821c905092915050565b600061073a6000198460080261071c565b1980831691505092915050565b60006107538383610729565b9150826002028217905092915050565b61076c82610450565b67ffffffffffffffff811115610785576107846102dc565b5b61078f825461057c565b61079a8282856106d6565b600060209050601f8311600181146107cd57600084156107bb578287015190505b6107c58582610747565b86555061082d565b601f1984166107db866105ad565b60005b82811015610803578489015182556001820191506020850194506020810190506107de565b86831015610820578489015161081c601f891682610729565b8355505b6001600288020188555050505b505050505050565b600081546108428161057c565b61084c818661045b565b94506001821660008114610867576001811461087d576108b0565b60ff1983168652811515602002860193506108b0565b610886856105ad565b60005b838110156108a857815481890152600182019150602081019050610889565b808801955050505b50505092915050565b600060408201905081810360008301526108d38185610835565b905081810360208301526108e78184610496565b9050939250505056fea264697066735822122090730a6553ab285be62e2f4cf06684451d860223bf67419f311a45b55d246a7264736f6c63430008180033";

type HelloWorldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWorldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWorld__factory extends ContractFactory {
  constructor(...args: HelloWorldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialMessage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HelloWorld> {
    return super.deploy(initialMessage, overrides || {}) as Promise<HelloWorld>;
  }
  override getDeployTransaction(
    initialMessage: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialMessage, overrides || {});
  }
  override attach(address: string): HelloWorld {
    return super.attach(address) as HelloWorld;
  }
  override connect(signer: Signer): HelloWorld__factory {
    return super.connect(signer) as HelloWorld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWorldInterface {
    return new utils.Interface(_abi) as HelloWorldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWorld {
    return new Contract(address, _abi, signerOrProvider) as HelloWorld;
  }
}
