/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProxyAdmin,
  ProxyAdminInterface,
} from "../../../contracts/Upgrade.sol/ProxyAdmin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "changeProxyAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "getProxyImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "proxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061087d806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063204e1c7a1461005c5780637eff275e1461008c5780638da5cb5b146100a857806399a88ec4146100c6578063f3b7dead146100e2575b600080fd5b610076600480360381019061007191906105bf565b610112565b60405161008391906105fb565b60405180910390f35b6100a660048036038101906100a19190610654565b610228565b005b6100b0610325565b6040516100bd91906105fb565b60405180910390f35b6100e060048036038101906100db9190610654565b610349565b005b6100fc60048036038101906100f791906105bf565b610446565b60405161010991906105fb565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff16604051602401604051602081830303815290604052635c60da1b60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101869190610705565b600060405180830381855afa9150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50915091508161020b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020290610779565b60405180910390fd5b8080602001905181019061021f91906107ae565b92505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ad90610827565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16638f283970826040518263ffffffff1660e01b81526004016102ef91906105fb565b600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce90610827565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16633659cfe6826040518263ffffffff1660e01b815260040161041091906105fb565b600060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1660405160240160405160208183030381529060405263f851a44060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104ba9190610705565b600060405180830381855afa9150503d80600081146104f5576040519150601f19603f3d011682016040523d82523d6000602084013e6104fa565b606091505b50915091508161053f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053690610779565b60405180910390fd5b8080602001905181019061055391906107ae565b92505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061058c82610561565b9050919050565b61059c81610581565b81146105a757600080fd5b50565b6000813590506105b981610593565b92915050565b6000602082840312156105d5576105d461055c565b5b60006105e3848285016105aa565b91505092915050565b6105f581610581565b82525050565b600060208201905061061060008301846105ec565b92915050565b600061062182610561565b9050919050565b61063181610616565b811461063c57600080fd5b50565b60008135905061064e81610628565b92915050565b6000806040838503121561066b5761066a61055c565b5b60006106798582860161063f565b925050602061068a858286016105aa565b9150509250929050565b600081519050919050565b600081905092915050565b60005b838110156106c85780820151818401526020810190506106ad565b60008484015250505050565b60006106df82610694565b6106e9818561069f565b93506106f98185602086016106aa565b80840191505092915050565b600061071182846106d4565b915081905092915050565b600082825260208201905092915050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610763600b8361071c565b915061076e8261072d565b602082019050919050565b6000602082019050818103600083015261079281610756565b9050919050565b6000815190506107a881610628565b92915050565b6000602082840312156107c4576107c361055c565b5b60006107d284828501610799565b91505092915050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b600061081160098361071c565b915061081c826107db565b602082019050919050565b6000602082019050818103600083015261084081610804565b905091905056fea264697066735822122073ae45fd1539a7a1e01711def73b04fe0f386677e630a5157d3527a217a60e3364736f6c63430008180033";

type ProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAdmin__factory extends ContractFactory {
  constructor(...args: ProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<ProxyAdmin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyAdmin {
    return super.attach(address) as ProxyAdmin;
  }
  override connect(signer: Signer): ProxyAdmin__factory {
    return super.connect(signer) as ProxyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminInterface {
    return new utils.Interface(_abi) as ProxyAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as ProxyAdmin;
  }
}
