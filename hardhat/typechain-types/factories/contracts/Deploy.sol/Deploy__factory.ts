/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Deploy,
  DeployInterface,
} from "../../../contracts/Deploy.sol/Deploy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Deploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061061c806100206000396000f3fe60806040526004361061002c5760003560e01c8062774360146100385780631cff79cd1461006857610033565b3661003357005b600080fd5b610052600480360381019061004d9190610348565b610084565b60405161005f91906103d2565b60405180910390f35b610082600480360381019061007d9190610419565b61013b565b005b600081516020830134f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f6906104d2565b60405180910390fd5b7f55ea6c6b31543d8e2ec6a72f71a79c0f4b72ed0d4757172b043d8f4f4cd848488160405161012e91906103d2565b60405180910390a1919050565b60008273ffffffffffffffffffffffffffffffffffffffff1634836040516101639190610563565b60006040518083038185875af1925050503d80600081146101a0576040519150601f19603f3d011682016040523d82523d6000602084013e6101a5565b606091505b50509050806101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906105c6565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102558261020c565b810181811067ffffffffffffffff821117156102745761027361021d565b5b80604052505050565b60006102876101ee565b9050610293828261024c565b919050565b600067ffffffffffffffff8211156102b3576102b261021d565b5b6102bc8261020c565b9050602081019050919050565b82818337600083830152505050565b60006102eb6102e684610298565b61027d565b90508281526020810184848401111561030757610306610207565b5b6103128482856102c9565b509392505050565b600082601f83011261032f5761032e610202565b5b813561033f8482602086016102d8565b91505092915050565b60006020828403121561035e5761035d6101f8565b5b600082013567ffffffffffffffff81111561037c5761037b6101fd565b5b6103888482850161031a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103bc82610391565b9050919050565b6103cc816103b1565b82525050565b60006020820190506103e760008301846103c3565b92915050565b6103f6816103b1565b811461040157600080fd5b50565b600081359050610413816103ed565b92915050565b600080604083850312156104305761042f6101f8565b5b600061043e85828601610404565b925050602083013567ffffffffffffffff81111561045f5761045e6101fd565b5b61046b8582860161031a565b9150509250929050565b600082825260208201905092915050565b7f6465706c6f79206661696c656400000000000000000000000000000000000000600082015250565b60006104bc600d83610475565b91506104c782610486565b602082019050919050565b600060208201905081810360008301526104eb816104af565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561052657808201518184015260208101905061050b565b60008484015250505050565b600061053d826104f2565b61054781856104fd565b9350610557818560208601610508565b80840191505092915050565b600061056f8284610532565b915081905092915050565b7f6661696c65640000000000000000000000000000000000000000000000000000600082015250565b60006105b0600683610475565b91506105bb8261057a565b602082019050919050565b600060208201905081810360008301526105df816105a3565b905091905056fea2646970667358221220fa9754a4b2de9098004d4ec207ca9a88eab13e9f4d834e4cc0998010a0ebcced64736f6c63430008180033";

type DeployConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deploy__factory extends ContractFactory {
  constructor(...args: DeployConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Deploy> {
    return super.deploy(overrides || {}) as Promise<Deploy>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Deploy {
    return super.attach(address) as Deploy;
  }
  override connect(signer: Signer): Deploy__factory {
    return super.connect(signer) as Deploy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployInterface {
    return new utils.Interface(_abi) as DeployInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Deploy {
    return new Contract(address, _abi, signerOrProvider) as Deploy;
  }
}
