/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Caller,
  CallerInterface,
} from "../../../contracts/Call.sol/Caller";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Callee",
        name: "_callee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "setX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "setXFromAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Callee",
        name: "_callee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_x",
        type: "uint256",
      },
    ],
    name: "setXandSendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610471806100206000396000f3fe6080604052600436106100345760003560e01c80634a2ad99f14610039578063cb58703914610062578063d44abc421461008b575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906102e3565b6100a7565b005b34801561006e57600080fd5b506100896004803603810190610084919061034f565b610128565b005b6100a560048036038101906100a091906102e3565b6101af565b005b8173ffffffffffffffffffffffffffffffffffffffff16634018d9aa826040518263ffffffff1660e01b81526004016100e0919061039e565b6020604051808303816000875af11580156100ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012391906103ce565b505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff16634018d9aa836040518263ffffffff1660e01b8152600401610166919061039e565b6020604051808303816000875af1158015610185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a991906103ce565b50505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663cdc2307634856040518363ffffffff1660e01b81526004016101ec919061039e565b604080518083038185885af1158015610209573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061022e91906103fb565b9150915050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102688261023d565b9050919050565b600061027a8261025d565b9050919050565b61028a8161026f565b811461029557600080fd5b50565b6000813590506102a781610281565b92915050565b6000819050919050565b6102c0816102ad565b81146102cb57600080fd5b50565b6000813590506102dd816102b7565b92915050565b600080604083850312156102fa576102f9610238565b5b600061030885828601610298565b9250506020610319858286016102ce565b9150509250929050565b61032c8161025d565b811461033757600080fd5b50565b60008135905061034981610323565b92915050565b6000806040838503121561036657610365610238565b5b60006103748582860161033a565b9250506020610385858286016102ce565b9150509250929050565b610398816102ad565b82525050565b60006020820190506103b3600083018461038f565b92915050565b6000815190506103c8816102b7565b92915050565b6000602082840312156103e4576103e3610238565b5b60006103f2848285016103b9565b91505092915050565b6000806040838503121561041257610411610238565b5b6000610420858286016103b9565b9250506020610431858286016103b9565b915050925092905056fea2646970667358221220742bb37be054f99250455401e11c4c0e8ff8c577b80b3fec6b54cd28df786c0f64736f6c63430008180033";

type CallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Caller__factory extends ContractFactory {
  constructor(...args: CallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Caller> {
    return super.deploy(overrides || {}) as Promise<Caller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Caller {
    return super.attach(address) as Caller;
  }
  override connect(signer: Signer): Caller__factory {
    return super.connect(signer) as Caller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallerInterface {
    return new utils.Interface(_abi) as CallerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Caller {
    return new Contract(address, _abi, signerOrProvider) as Caller;
  }
}
